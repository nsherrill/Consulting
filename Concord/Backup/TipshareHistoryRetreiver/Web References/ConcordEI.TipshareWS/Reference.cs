//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
// 
#pragma warning disable 1591

namespace TipshareHistoryRetreiver.ConcordEI.TipshareWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TipshareWSSoap", Namespace="http://tempuri.org/")]
    public partial class TipshareWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTipshareVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramUsageOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordProgramUsageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TipshareWS() {
            this.Url = global::TipshareHistoryRetreiver.Properties.Settings.Default.TipshareHistoryRetreiver_ConcordEI_TipshareWS_TipshareWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTipshareVersionCompletedEventHandler GetTipshareVersionCompleted;
        
        /// <remarks/>
        public event GetProgramUsageCompletedEventHandler GetProgramUsageCompleted;
        
        /// <remarks/>
        public event RecordProgramUsageCompletedEventHandler RecordProgramUsageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTipshareVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Version GetTipshareVersion() {
            object[] results = this.Invoke("GetTipshareVersion", new object[0]);
            return ((Version)(results[0]));
        }
        
        /// <remarks/>
        public void GetTipshareVersionAsync() {
            this.GetTipshareVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetTipshareVersionAsync(object userState) {
            if ((this.GetTipshareVersionOperationCompleted == null)) {
                this.GetTipshareVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTipshareVersionOperationCompleted);
            }
            this.InvokeAsync("GetTipshareVersion", new object[0], this.GetTipshareVersionOperationCompleted, userState);
        }
        
        private void OnGetTipshareVersionOperationCompleted(object arg) {
            if ((this.GetTipshareVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTipshareVersionCompleted(this, new GetTipshareVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgramUsage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProgramUsage(System.DateTime DateStart, string UserPass) {
            object[] results = this.Invoke("GetProgramUsage", new object[] {
                        DateStart,
                        UserPass});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramUsageAsync(System.DateTime DateStart, string UserPass) {
            this.GetProgramUsageAsync(DateStart, UserPass, null);
        }
        
        /// <remarks/>
        public void GetProgramUsageAsync(System.DateTime DateStart, string UserPass, object userState) {
            if ((this.GetProgramUsageOperationCompleted == null)) {
                this.GetProgramUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramUsageOperationCompleted);
            }
            this.InvokeAsync("GetProgramUsage", new object[] {
                        DateStart,
                        UserPass}, this.GetProgramUsageOperationCompleted, userState);
        }
        
        private void OnGetProgramUsageOperationCompleted(object arg) {
            if ((this.GetProgramUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramUsageCompleted(this, new GetProgramUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecordProgramUsage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RecordProgramUsage(string StoreName) {
            object[] results = this.Invoke("RecordProgramUsage", new object[] {
                        StoreName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecordProgramUsageAsync(string StoreName) {
            this.RecordProgramUsageAsync(StoreName, null);
        }
        
        /// <remarks/>
        public void RecordProgramUsageAsync(string StoreName, object userState) {
            if ((this.RecordProgramUsageOperationCompleted == null)) {
                this.RecordProgramUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordProgramUsageOperationCompleted);
            }
            this.InvokeAsync("RecordProgramUsage", new object[] {
                        StoreName}, this.RecordProgramUsageOperationCompleted, userState);
        }
        
        private void OnRecordProgramUsageOperationCompleted(object arg) {
            if ((this.RecordProgramUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordProgramUsageCompleted(this, new RecordProgramUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Version {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetTipshareVersionCompletedEventHandler(object sender, GetTipshareVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTipshareVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTipshareVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Version Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Version)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProgramUsageCompletedEventHandler(object sender, GetProgramUsageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RecordProgramUsageCompletedEventHandler(object sender, RecordProgramUsageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordProgramUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordProgramUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591